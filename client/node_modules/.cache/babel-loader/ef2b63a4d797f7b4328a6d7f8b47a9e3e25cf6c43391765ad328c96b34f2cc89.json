{"ast":null,"code":"var _jsxFileName = \"/Users/chu/Documents/workspace/flow-assignment/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUri = 'http://localhost:5001';\nfunction App() {\n  _s();\n  const [customExtensions, setCustomExtensions] = useState([]);\n  const [newExtension, setNewExtension] = useState('');\n  const [fixedList, setFixedList] = useState([]);\n  useEffect(() => {\n    fetchFixedExtensions();\n  }, []);\n  const fetchFixedExtensions = async () => {\n    try {\n      const response = await axios.get('/fixed/list');\n      setFixedList(response.data);\n      console.log('했다!!!');\n    } catch (error) {\n      console.log('Axios Error : ', error);\n    }\n  };\n  const handleFixedExtension = async (id, checked) => {\n    try {\n      const response = await axios.post(`${backendUri}/update/fixed`, {\n        id,\n        checked\n      });\n\n      // 클라이언트 상태 업데이트\n      const updatedExtensions = fixedList.map(extension => {\n        if (extension.id === id) {\n          return {\n            ...extension,\n            status: checked ? 1 : 0\n          };\n        }\n        return extension;\n      });\n      setFixedList(updatedExtensions);\n      console.log(response);\n    } catch (error) {\n      console.log('Axios Error : ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"1\\uBC88 \\uACE0\\uC815\\uD655\\uC7A5\\uC790\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: fixedExtensions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: fixedExtensions.map(extension => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox\",\n          style: {\n            margin: '0 10px 0 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"extension\",\n            value: extension.name,\n            checked: extension.status === 1,\n            onChange: () => handleFixedExtension(extension.id, extension.status)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), ' ', extension.name]\n        }, extension.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c4dRwUtXZBeftOZ5M6tE8H1mGlc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","backendUri","App","_s","customExtensions","setCustomExtensions","newExtension","setNewExtension","fixedList","setFixedList","fetchFixedExtensions","response","get","data","console","log","error","handleFixedExtension","id","checked","post","updatedExtensions","map","extension","status","children","fileName","_jsxFileName","lineNumber","columnNumber","fixedExtensions","length","className","style","margin","type","name","value","onChange","_c","$RefreshReg$"],"sources":["/Users/chu/Documents/workspace/flow-assignment/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios'\n\nconst backendUri = 'http://localhost:5001'\n\nfunction App() {\n  const [customExtensions, setCustomExtensions] = useState([]);\n  const [newExtension, setNewExtension] = useState('');\n  const [fixedList, setFixedList] = useState([]);\n\n  useEffect(() => {\n    fetchFixedExtensions();\n  }, []);\n\n  const fetchFixedExtensions = async () => {\n    try {\n      const response = await axios.get('/fixed/list');\n      setFixedList(response.data);\n      console.log('했다!!!')\n    } catch (error) {\n      console.log('Axios Error : ', error);\n    }\n  }\n\n\n  const handleFixedExtension = async (id, checked) => {\n    try {\n      const response = await axios.post(`${backendUri}/update/fixed`, {id,checked})\n      \n      // 클라이언트 상태 업데이트\n      const updatedExtensions = fixedList.map((extension) => {\n        if (extension.id === id) {\n          return { ...extension, status: checked ? 1 : 0 };\n        }\n        return extension;\n      });\n      setFixedList(updatedExtensions);\n      console.log(response)\n    } catch (error) {\n      console.log('Axios Error : ', error);\n    }\n  }\n\n  return (\n    <div>\n      <h2>1번 고정확장자</h2>\n      <div>\n        {fixedExtensions.length === 0 ? (\n          <p>Loading...</p>\n        ) : (\n          <div>\n            {fixedExtensions.map((extension) => (\n              <div className='checkbox' key={extension.id} style={{ margin: '0 10px 0 0' }}>\n                <input\n                  type=\"checkbox\"\n                  name=\"extension\"\n                  value={extension.name}\n                  checked={extension.status === 1}\n                  onChange={() => handleFixedExtension(extension.id, extension.status)}\n                />{' '}\n                {extension.name}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* <div>\n        <h2>2번 커스텀확장자</h2>\n        <input\n          type=\"text\"\n          value={newExtension}\n          onChange={(e) => setNewExtension(e.target.value)}\n          maxLength={20}\n        />\n        <button style={{ background: 'grey', color: 'white' }}>\n          + 추가\n        </button>\n      </div>\n      <div>\n        <h2>3번</h2>\n        {customExtensions.map((extension, index) => (\n          <button key={index}>\n            {extension} X\n          </button>\n        ))}\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}